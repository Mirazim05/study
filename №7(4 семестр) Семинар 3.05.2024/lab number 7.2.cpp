#include <iostream>
#include <vector>
#include <list>
#include <chrono>

using namespace std;

int main() {
    // ??????? ??????
    vector<int> vector;
    for (int i = 0; i < 10000; i++) {
        vector.push_back(i);
    }

    // ??????? ??????
    list<int> lst;
    for (int i = 0; i < 10000; i++) {
        lst.push_back(i);
    }

    // ???????? ????? ?????? ???????? ? ???????
    auto start = chrono::high_resolution_clock::now();
    bool found_in_vector = false;
    for (int i = 0; i < 100000; i++) {
        found_in_vector |= binary_search(vector.begin(), vector.end(), 5);
    }
    auto end = chrono::high_resolution_clock::now();
    double vector_time = chrono::duration_cast<chrono::nanoseconds>(end - start).count() / 100000.0;

    // ???????? ????? ?????? ???????? ? ??????
    start = chrono::high_resolution_clock::now();
    bool found_in_list = false;
    for (int i = 0; i < 100000; i++) {
        found_in_list |= find(lst.begin(), lst.end(), 5) != lst.end();
    }
    end = chrono::high_resolution_clock::now();
    double list_time = chrono::duration_cast<chrono::nanoseconds>(end - start).count() / 100000.0;

    // ??????? ??????????
    cout << "????? ?????? ???????? ? ???????: " << vector_time << " ???????????" << endl;
    cout << "????? ?????? ???????? ? ??????: " << list_time << " ???????????" << endl;

    return 0;
}
